<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: scala | Montree Bungnasang]]></title>
  <link href="http://gailo22.github.io/blog/categories/scala/atom.xml" rel="self"/>
  <link href="http://gailo22.github.io/"/>
  <updated>2014-03-19T11:45:26+07:00</updated>
  <id>http://gailo22.github.io/</id>
  <author>
    <name><![CDATA[gailo22]]></name>
    <email><![CDATA[gailo22@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Hello Scala]]></title>
    <link href="http://gailo22.github.io/blog/2013/07/30/hello-scala/"/>
    <updated>2013-07-30T17:58:00+07:00</updated>
    <id>http://gailo22.github.io/blog/2013/07/30/hello-scala</id>
    <content type="html"><![CDATA[<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">def</span> <span class="n">hello</span> <span class="k">=</span> <span class="n">println</span><span class="o">(&amp;</span><span class="n">ldquo</span><span class="o">;</span><span class="nc">Hello</span> <span class="n">world</span><span class="o">!&amp;</span><span class="n">rdquo</span><span class="o">;)&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Functional style:</h2>

<p>```scala
def append<a href="xs:%20List[A],%20ys:%20List[A]">A</a>: List[A] =
  if (xs == Nil) ys else xs.head :: append(xs.tail, ys)</p>

<p>def map<a href="f:%20A%20=>%20B,%20xs:%20List[A]">A, B</a>: List[B] =
  xs match {</p>

<pre><code>case Nil =&gt; Nil
case h::t =&gt; f(h) :: map(f, t)
</code></pre>

<p>  }</p>

<p>def increment(x: Int): Int = x + 1</p>

<p>```</p>

<h2>Usage:</h2>

<p><code>scala
scala&gt; val a = map(increment, List(1,2,3,4,5))
a: List[Int] = List(2, 3, 4, 5, 6)
</code></p>
]]></content>
  </entry>
  
</feed>
